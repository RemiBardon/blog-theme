{{- $page := $ }}
{{- $recursive := false }}
{{- if eq "map[string]interface {}" (printf "%T" $) }}
  {{- with $.ctx }}
    {{- $page = . }}
  {{- else }}
    {{- errorf "The 'pages' partial requires a 'page' argument when passed a dict." }}
  {{- end }}
  {{- $recursive = $.recursive | default $recursive }}
{{- end }}

{{- $res := slice }}

{{- with $page }}{{/* Apply proper context */ -}}

{{- $pages := slice }}
{{- $translationKeys := slice }}
{{- /* `.AllTranslations` gives translations sorted by weight, we want the current language first */}}
{{- $allTranslations := slice .Page }}
{{- $allTranslations = $allTranslations | append .Page.Translations }}
{{- range $allTranslations }}
  {{- $newPages := slice }}
  {{- if $recursive }}
    {{- $newPages = partial "util/page-filter" .RegularPagesRecursive }}
  {{- else }}
    {{- $newPages = partial "util/page-filter" .Pages }}
  {{- end }}
  {{- range $newPage := $newPages }}
    {{- if not (in $translationKeys $newPage.TranslationKey) }}
      {{- $pages = $pages | append $newPage }}
      {{- $translationKeys = $translationKeys | append $newPage.TranslationKey }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $res = (.Paginate $pages).Pages.ByPublishDate.Reverse }}

{{- end }}{{/* End context */ -}}

{{- return $res -}}
